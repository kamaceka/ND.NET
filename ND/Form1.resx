<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QCCRXhpZgAATU0AKgAAAAgAAgESAAMAAAABAAEAAIdpAAQAAAAB
        AAAAJgAAAAAAAZKGAAcAAABCAAAAOAAAAABVTklDT0RFAABDAG8AbQBwAHIAZQBzAHMAZQBkACAAYgB5
        ACAAagBwAGUAZwAtAHIAZQBjAG8AbQBwAHIAZQBzAHP/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYE
        BAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcI
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCABnAHYD
        ASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA
        AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6
        Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKz
        tLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEB
        AQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEI
        FEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hp
        anN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX
        2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9DKKKKACiiigAooooACcVQn8U6bba0mmy
        ahZx6hIoZLZplErA9MLnPNX8bmx618ffGDXdU8R/EfV7zTbiw/tH7eIrOebP2eMI4RGOAcgKoPQ5NfF8
        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
</value>
  </data>
</root>