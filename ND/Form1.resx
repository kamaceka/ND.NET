<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QB+RXhpZgAATU0AKgAAAAgAAgESAAMAAAABAAEAAIdpAAQAAAAB
        AAAAJgAAAAAAAZKGAAcAAAA8AAAAOAAAAABDAG8AbQBwAHIAZQBzAHMAZQBkACAAYgB5ACAAagBwAGUA
        ZwAtAHIAZQBjAG8AbQBwAHIAZQBzAHMAAAAAAP/bAEMAAgEBAgEBAgICAgICAgIDBQMDAwMDBgQEAwUH
        BgcHBwYHBwgJCwkICAoIBwcKDQoKCwwMDAwHCQ4PDQwOCwwMDP/bAEMBAgICAwMDBgMDBgwIBwgMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIAGcAdgMBIgAC
        EQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0B
        AgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVG
        R0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3
        uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAA
        AAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGh
        scEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1
        dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri
        4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/AP0MooooAKKKKACiiigAJxVCfxTpttrSabJqFnHq
        EihktmmUSsD0wuc81fxubHrXx98YNd1TxH8R9XvNNuLD+0ft4is55s/Z4wjhEY4ByAqg9Dk18XxpxY8j
        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
        N6sMUUUUAFGKKKADFGKKKACiiigAooooA//Z
</value>
  </data>
</root>